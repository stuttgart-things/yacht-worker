---
version: 3

vars:
  MODULE: github.com/stuttgart-things/yacht-worker
  REGISTRY: eu.gcr.io
  REPOSITORY_NAME: stuttgart-things
  PROJECT_NAME:
    sh: echo ${PWD##*/}
  DATE:
    sh: date +"%y.%m%d.%H%M"
  GIT_COMMIT:
    sh: git log -n 1 --format=%h
  MAJOR:
    sh: git describe --tags --abbrev=0 | cut -d "." -f1
  MINOR:
    sh: git describe --tags --abbrev=0 | cut -d "." -f2
  PATCH:
    sh: git describe --tags --abbrev=0 | cut -d "." -f3
  VERSION:
    sh: old_tag=$(git describe --tags --abbrev=0 | cut -d "." -f3); new_tag=$((old_tag+1)); echo $new_tag
  UPDATED_TAG:
    sh: old_tag=$(git describe --tags --abbrev=0 | cut -d "." -f3); new_tag=$((old_tag+1)); echo $new_tag
  UPDATED_TAG_VERSION:
    sh: t1=$(git describe --tags --abbrev=0 | cut -f1 -d'.'); t2=$(git describe --tags --abbrev=0 | cut -f2 -d'.'); echo $t1.$t2.{{.UPDATED_TAG}}

tasks:

  lint:
    desc: Lint code
    cmds:
      - cmd: golangci-lint run
        ignore_error: true

  build-worker:
    desc: Build worker
    deps: [lint]
    cmds:
      - go mod tidy
      - CGO_ENABLED=0
      - GOOS=linux
      - go install -ldflags="-X main.version=v{{ .MAJOR }}.{{ .MINOR }}.{{ .PATCH }} -X main.date={{ .DATE }} -X main.commit={{ .GIT_COMMIT }}"

  build-image:
    desc: Build container image
    deps: [build-worker]
    cmds:
      - sudo nerdctl build -t {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .PROJECT_NAME }}:{{ .DATE }}-{{ .UPDATED_TAG_VERSION }} --build-arg VERSION={{ .MAJOR }}.{{ .MINOR }}.{{ .PATCH }} --build-arg BUILD_DATE={{ .DATE }} --build-arg COMMIT={{ .GIT_COMMIT }} --build-arg GIT_PAT=${CODEHUB_PAT} .
      - sudo nerdctl push {{ .REGISTRY }}/{{ .REPOSITORY_NAME }}/{{ .PROJECT_NAME }}:{{ .DATE }}-{{ .UPDATED_TAG_VERSION }}

  run:
    desc: Run worker locally
    deps: [build-worker]
    cmds:
      - "{{ .PROJECT_NAME }}"
    env:
      SERVER_PORT: "{{ .LOCAL_SERVER_PORT }}"

  run-container:
    desc: Run container image
    deps: [build-image]
    cmds:
      - sudo nerdctl run -e SERVER_PORT={{ .LOCAL_CONTAINER_SERVER_PORT }} -p {{ .LOCAL_CONTAINER_SERVER_PORT }}:{{ .LOCAL_CONTAINER_SERVER_PORT }} {{ .REGISTRY }}/{{ .PROJECT_NAME }}/{{ .PROJECT_NAME }}:{{ .DATE }}-{{ .UPDATED_TAG_VERSION }}

  tag:
    desc: commit, push & tag the module
    deps: [lint]
    cmds:
      - go mod tidy
      - git config advice.addIgnoredFile false
      - git pull
      - rm -rf *.log
      - git add *
      - git commit -am 'updated {{ .PROJECT_NAME }} {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}'
      - git push
      - git tag -a {{ .UPDATED_TAG_VERSION }} -m 'updated for stuttgart-things {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}'
      - git push origin --tags
    vars:
      UPDATED_TAG:
        sh: old_tag=$(git describe --tags --abbrev=0 | cut -d "." -f3); new_tag=$((old_tag+1)); echo $new_tag
      UPDATED_TAG_VERSION:
        sh: t1=$(git describe --tags --abbrev=0 | cut -f1 -d'.'); t2=$(git describe --tags --abbrev=0 | cut -f2 -d'.'); echo $t1.$t2.{{.UPDATED_TAG}}

  push:
    desc: Commit & push the app
    deps: [build-worker, tag, build-image, package]
    cmds:
      - git pull
      - git config advice.addIgnoredFile false
      - rm -rf *.log
      - git add *
      - |
        echo "Enter COMMIT_MESSAGE:"
        read COMMIT_MESSAGE;
        git commit -am "${COMMIT_MESSAGE} for {{ .MAJOR }}.{{ .MINOR }}.{{ .PATCH }}"
      - git push
      - helm push {{ .PROJECT_NAME }}-{{ .UPDATED_TAG_VERSION }}.tgz oci://{{ .REGISTRY }}/{{ .REPOSITORY_NAME }}
      - rm -rf {{ .PROJECT_NAME }}-{{ .UPDATED_TAG_VERSION }}.tgz
